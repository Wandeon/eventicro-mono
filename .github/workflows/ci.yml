name: CI

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  guardrails:
    name: Guardrails (sensitive paths)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Detect sensitive changes
        run: |
          set -euo pipefail
          base="${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || 'HEAD^' }}"
          echo "Base for diff: $base"
          mapfile -t globs <<'GLOBS'
          ops/*
          ops/**
          infra/*
          infra/**
          scripts/*
          scripts/**
          apps/ui/src/lib/server/*
          apps/ui/src/lib/server/**
          apps/ui/src/routes/**/_server.*
          apps/ui/src/routes/**/+page.server.*
GLOBS
          changed=$(git diff --name-only "$base"...HEAD || git diff --name-only "$base" HEAD)
          echo "Changed files:"
          echo "$changed"
          hit=false
          for g in "${globs[@]}"; do
            if grep -Eq "^$(echo "$g" | sed 's/\*/.*?/g; s/\./\\./g; s/\//\\\//g')" <<<"$changed"; then hit=true; break; fi
          done
          if [ "$hit" = true ]; then
            # Fail the job unless PR title includes [allow-sensitive]
            title="${{ github.event.pull_request.title || '' }}"
            if [[ "$title" == *"[allow-sensitive]"* ]]; then
              echo "Sensitive paths touched but PR title allows it â€” proceeding."
            else
              echo "::error::Sensitive paths changed. Add [allow-sensitive] to PR title and explain in description."
              exit 1
            fi
          fi

  ui-build:
    name: Build UI
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install & Build UI (if present)
        run: |
          set -euo pipefail
          if [ -f apps/ui/package.json ]; then
            pnpm -C apps/ui install --frozen-lockfile
            pnpm -C apps/ui build
            (pnpm -C apps/ui lint || true)
            (pnpm -C apps/ui test || true)
          else
            echo "apps/ui not found; skipping."
          fi
